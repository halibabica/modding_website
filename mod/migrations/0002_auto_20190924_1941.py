# Generated by Django 2.2.2 on 2019-09-24 19:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields
import embed_video.fields
import mod.models
import taggit_selectize.managers


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mod', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='News',
            fields=[
                ('newsID', models.AutoField(primary_key=True, serialize=False, verbose_name='news ID')),
                ('newsDate', models.DateTimeField(auto_now=True, verbose_name='news publish date')),
                ('newsText', models.CharField(max_length=5000, verbose_name='news text')),
            ],
        ),
        migrations.CreateModel(
            name='NewsNotifications',
            fields=[
                ('newsNotificationsID', models.AutoField(primary_key=True, serialize=False, verbose_name='new notifications ID')),
            ],
        ),
        migrations.AlterModelOptions(
            name='mod',
            options={'get_latest_by': 'modDate'},
        ),
        migrations.RemoveField(
            model_name='mod',
            name='modCreditPerms',
        ),
        migrations.RemoveField(
            model_name='mod',
            name='modDiscord',
        ),
        migrations.RemoveField(
            model_name='mod',
            name='modDonations',
        ),
        migrations.RemoveField(
            model_name='mod',
            name='modDownloads',
        ),
        migrations.RemoveField(
            model_name='reviewrating',
            name='reviewAuthor',
        ),
        migrations.AddField(
            model_name='mod',
            name='modApproved',
            field=models.BooleanField(default=False, verbose_name='mod moderation approval'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='mod',
            name='modAvatar',
            field=easy_thumbnails.fields.ThumbnailerImageField(blank=True, help_text='Recommended size is 200x200. Make sure the background is transparent, as well.', upload_to=mod.models.mod_image_directory_path, verbose_name='Avatar Image'),
        ),
        migrations.AddField(
            model_name='mod',
            name='modBackground',
            field=models.ImageField(blank=True, upload_to=mod.models.mod_image_directory_path, verbose_name='Background Image'),
        ),
        migrations.AddField(
            model_name='mod',
            name='modBackgroundTiledStretch',
            field=models.CharField(choices=[('Tiled', 'Tiled'), ('Stretched', 'Stretched')], default=('Tiled', 'Tiled'), help_text='What is tiled and/or stretched?', max_length=100, verbose_name='mod background tiled or stretch'),
        ),
        migrations.AddField(
            model_name='mod',
            name='modPreviewImage1',
            field=models.ImageField(blank=True, upload_to=mod.models.mod_preview_image_directory_path, verbose_name='1st Preview Image'),
        ),
        migrations.AddField(
            model_name='mod',
            name='modPreviewImage2',
            field=models.ImageField(blank=True, upload_to=mod.models.mod_preview_image_directory_path, verbose_name='2nd Preview Image'),
        ),
        migrations.AddField(
            model_name='mod',
            name='modPreviewImage3',
            field=models.ImageField(blank=True, upload_to=mod.models.mod_preview_image_directory_path, verbose_name='3rd Preview Image'),
        ),
        migrations.AddField(
            model_name='mod',
            name='modPreviewImage4',
            field=models.ImageField(blank=True, upload_to=mod.models.mod_preview_image_directory_path, verbose_name='4th Preview Image'),
        ),
        migrations.AddField(
            model_name='mod',
            name='modPreviewImage5',
            field=models.ImageField(blank=True, upload_to=mod.models.mod_preview_image_directory_path, verbose_name='5th Preview Image'),
        ),
        migrations.AddField(
            model_name='mod',
            name='modPreviewVideo',
            field=embed_video.fields.EmbedVideoField(blank=True, help_text='Only YouTube and Vimeo links are currently supported.', verbose_name='Trailer Video'),
        ),
        migrations.AddField(
            model_name='mod',
            name='modShortDescription',
            field=models.CharField(blank=True, help_text='This should be short version of the above. Please keep it down to a few short sentences.', max_length=250, verbose_name='Mod Short Description'),
        ),
        migrations.AddField(
            model_name='rating',
            name='ratingChoice',
            field=models.CharField(choices=[('Played', 'Played'), ('Want to play', 'Want to play')], default=('Played', 'Played'), max_length=100, verbose_name='rating choice'),
        ),
        migrations.AddField(
            model_name='rating',
            name='ratingNote',
            field=models.CharField(default='', max_length=1000, verbose_name='rating note'),
        ),
        migrations.AddField(
            model_name='reviewrating',
            name='reviewApproved',
            field=models.BooleanField(default=False, verbose_name='review moderation approval'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='reviewrating',
            name='reviewAuthorID',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='mod',
            name='modDescription',
            field=models.CharField(help_text='You can format the description using HTML tags, such as h1, b, and lists.', max_length=10000, verbose_name='Mod Description'),
        ),
        migrations.AlterField(
            model_name='mod',
            name='modName',
            field=models.CharField(max_length=100, verbose_name='Mod Name'),
        ),
        migrations.AlterField(
            model_name='mod',
            name='modPlayTimeHours',
            field=models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Average Play Time Hours'),
        ),
        migrations.AlterField(
            model_name='mod',
            name='modPlayTimeMinutes',
            field=models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MaxValueValidator(59), django.core.validators.MinValueValidator(0)], verbose_name='Average Play Time Minutes'),
        ),
        migrations.AlterField(
            model_name='mod',
            name='modRating',
            field=models.FloatField(blank=True, default=0, null=True, verbose_name='mod average rating'),
        ),
        migrations.AlterField(
            model_name='mod',
            name='modStatus',
            field=models.CharField(choices=[('Full release', 'Full release'), ('Demo', 'Demo')], default=('Full release', 'Full release'), max_length=100),
        ),
        migrations.AlterField(
            model_name='mod',
            name='modUploadURL',
            field=models.URLField(max_length=1000, verbose_name='Mod Upload Destination'),
        ),
        migrations.AlterField(
            model_name='mod',
            name='modWebsite',
            field=models.CharField(blank=True, max_length=100, verbose_name='Mod Website'),
        ),
        migrations.AlterField(
            model_name='mod',
            name='tags',
            field=taggit_selectize.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='rating',
            name='ratingValue',
            field=models.PositiveSmallIntegerField(null=True, verbose_name='rating value'),
        ),
        migrations.DeleteModel(
            name='Vote',
        ),
        migrations.AddField(
            model_name='newsnotifications',
            name='newsNotificationsModID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mod.Mod'),
        ),
        migrations.AddField(
            model_name='newsnotifications',
            name='newsNotificationsUserID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='news',
            name='newsModID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mod.Mod'),
        ),
        migrations.AlterUniqueTogether(
            name='newsnotifications',
            unique_together={('newsNotificationsModID', 'newsNotificationsUserID')},
        ),
    ]
